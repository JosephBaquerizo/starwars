import Head from 'next/head'
import styles from '../styles/Home.module.css'

import { useState, useEffect } from 'react';

import Header from '../components/header/header';
import Search from '../components/search/search';
import List from '../components/list/list';
import Display from '../components/display/display';
import Loading from '../components/loading/loading';

export default function Home() {

  const [search, setSearch] = useState('');
  const [people, setPeople] = useState('');
  const [character, setCharacter] = useState('');
  const [page, setPage] = useState(1);
  const [loading, setLoading] = useState(false);

  const submitName = async (e) => {
    if (e.key !== 'Enter') return;
    setLoading(true);
    const response = await fetch(`https://swapi.dev/api/people/?search=${search}`);
    const json = await response.json();
    setPeople(json.results);
    setLoading(false);
  }

  const handleCharacter = (name) => {
    console.log(name);
    const newCharacter = people.filter(people => people.name.toLowerCase() === name.toLowerCase());
    if (!newCharacter.length) return;
    setCharacter(newCharacter[0]);
  }

  useEffect(() => {

    const getPeople = async () => {
      setLoading(true);
      const response = await fetch(`https://swapi.dev/api/people/?page=${page}`);
      const json = await response.json();
      return json.results;
    };

    getPeople().then(function(response) {
      setPeople(response);
      setCharacter(response[0]);
      setLoading(false);
    });

  }, [page])

  return (
    <div className={styles.container}>
      <Head>
        <title>Star Wars</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        <Header />
        <Search search={search} setSearch={setSearch} submitName={submitName} />
        {
          people && <List people={people} character={character} handleCharacter={handleCharacter} />
        }
        <Display page={page} setPage={setPage}/>
      </div>

      <Loading loading={loading} />

    </div>
  )
}
